[
    {
        "text_widget_id": 1971229552,
        "editor_class": "Editor",
        "text_widget_class": "CodeViewText",
        "sequence": "EditorTextCreated",
        "time": "2018-04-11T02:21:16.737591",
        "editor_id": 1971149584
    },
    {
        "text_widget_id": 1971229552,
        "filename": "/home/pi/Desktop/TestAndAnalyze.py",
        "editor_id": 1971149584,
        "sequence": "Open",
        "text_widget_class": "CodeViewText",
        "time": "2018-04-11T02:21:16.738877",
        "editor_class": "Editor"
    },
    {
        "text_widget_id": 1971229552,
        "text_widget_class": "CodeViewText",
        "index1": "1.0",
        "sequence": "TextDelete",
        "time": "2018-04-11T02:21:16.820919",
        "index2": "2.0"
    },
    {
        "text_widget_id": 1971229552,
        "text": "import time\nimport serial\nimport binascii\n\nabort_after = 15\ncount = 0\n\nrfid_serial = serial.Serial(\n        port='/dev/ttyS0',\n        baudrate = 57600,\n        parity=serial.PARITY_NONE,\n        stopbits=serial.STOPBITS_ONE,\n        bytesize=serial.EIGHTBITS,\n        timeout=0\n)\n\n#angle = input(\"Angle of tag being scanned: \")\nrfid_serial.flushInput()\nstart = time.time()\nwhile True:\n        delta_time = time.time() - start\n        if (delta_time >= abort_after):\n                break\n        bytesToRead = rfid_serial.inWaiting()\n        if (bytesToRead > 0):\n                time.sleep(1)\n                x = rfid_serial.read(18)\n                x = binascii.hexlify(x)\n                print x\n                print \"here\"\n                #print(\"\\n\")\n                if (x[0:4] == '1100'):\n                        count = count + 1\n\nfrequency = count / float(abort_after)\n#with open(\"results.txt\", \"a\") as myfile:\n#        myfile.write(\"Number of scans at %s  degrees in %s seconds: %s scans \\n\" % (angle, abort_after, count))\n#        myfile.write(\"Frequency: %s \\n\" % (frequency))\n#with open(\"csvResults.txt\", \"a\") as myfile:\n#        myfile.write(\"%s,%s,%s,%s \\n\" % (angle, abort_after, count,frequency)) #creates csv of (test angle, time scanned, count, frequency)\n#print(\"Finished!\")\n#print \"Number of scans at\",angle,\"degrees in\",abort_after,\"seconds:\",count,\"scans\"\n#print \"Number of scans per second:\",frequency\n",
        "text_widget_class": "CodeViewText",
        "sequence": "TextInsert",
        "index": "1.0",
        "time": "2018-04-11T02:21:16.841794",
        "tags": "()"
    },
    {
        "view_class": "ShellView",
        "view_id": 1971090448,
        "time": "2018-04-11T02:21:16.858643",
        "sequence": "ShowView"
    },
    {
        "widget_id": 1983972592,
        "time": "2018-04-11T02:21:17.334540",
        "widget_class": "Workbench",
        "sequence": "<FocusIn>"
    },
    {
        "text_widget_context": "shell",
        "text_widget_id": 1971091312,
        "text": "Python 3.5.3 (/usr/bin/python3)",
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "index": "1.0",
        "time": "2018-04-11T02:21:17.388223",
        "tags": "('welcome',)"
    },
    {
        "text_widget_context": "shell",
        "text_widget_id": 1971091312,
        "text": "\n",
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "index": "1.31",
        "time": "2018-04-11T02:21:17.392121",
        "tags": "('io',)"
    },
    {
        "text_widget_context": "shell",
        "text_widget_id": 1971091312,
        "text": ">>> ",
        "text_widget_class": "ShellText",
        "sequence": "TextInsert",
        "index": "2.0",
        "time": "2018-04-11T02:21:17.396426",
        "tags": "('toplevel', 'prompt')"
    }
]